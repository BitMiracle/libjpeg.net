<?xml version="1.0" encoding="UTF-8"?>
<xml>
  <file>
    <title>Compression parameter selection</title>
    <breadcumbs>
      <link file="..\\Knowledge_base.xml">
        <text>Knowledge base</text>
      </link>
      <text> :: </text>
      <link file="..\Classic_LibJpeg.xml">
        <text>Classic LibJpeg</text>
      </link>
    </breadcumbs>
    <descriptionarticle only="true">
      <p>
        <text>This section describes all the optional parameters you can set for JPEG compression, as well as the "helper" methods provided to assist in this task. Proper setting of some parameters requires detailed understanding of the JPEG standard; if you don't know what a parameter is for, it's best not to mess with it!</text> <br /><br /><text>It's a good idea to call </text> <link file="../jpeg_compress_struct.jpeg_set_defaults.xml"><text>jpeg_set_defaults</text> </link><text>() first, even if you plan to set all the parameters; that way your code is more likely to work with future JPEG libraries that have additional parameters. For the same reason, we recommend you use a helper method where one is provided, in preference to twiddling </text> <link file="../jpeg_compress_struct.xml"><text>jpeg_compress_struct</text> </link><text> properties directly.</text> </p>
      <p>
        <text>The helper </text> <b><text>methods</text> </b><text> are:</text> </p>
      <p>
        <table>
          <tbody>
            <tr>
              <td>
                <link file="../jpeg_compress_struct.jpeg_set_defaults.xml">
                  <text>jpeg_set_defaults</text> </link>
              </td>
              <td>
                <text>Sets all JPEG parameters to reasonable defaults, using</text> <br /><text>only the </text> <link file="../jpeg_compress_struct.In_color_space.xml"><text>input image's color space</text> </link><text>.</text> </td>
            </tr>
            <tr>
              <td>
                <link file="../jpeg_compress_struct.jpeg_set_colorspace.xml">
                  <text>jpeg_set_colorspace</text> </link>
              </td>
              <td>
                <text>Sets the JPEG file's colorspace as specified, and sets other colorspace-dependent parameters appropriately.</text> </td>
            </tr>
            <tr>
              <td>
                <link file="../jpeg_compress_struct.jpeg_default_colorspace.xml">
                  <text>jpeg_default_colorspace</text> </link>
              </td>
              <td>
                <text>Selects an appropriate JPEG colorspace based on </text> <link file="../jpeg_compress_struct.In_color_space.xml"><text>In_color_space</text> </link><text>, and calls </text> <link file="../jpeg_compress_struct.jpeg_set_colorspace.xml"><text>jpeg_set_colorspace</text> </link><text>().</text> </td>
            </tr>
            <tr>
              <td>
                <link file="../jpeg_compress_struct.jpeg_set_quality.xml">
                  <text>jpeg_set_quality</text> </link>
              </td>
              <td>
                <text>Constructs JPEG quantization tables appropriate for the indicated quality setting.</text> </td>
            </tr>
            <tr>
              <td>
                <link file="../jpeg_compress_struct.jpeg_set_linear_quality.xml">
                  <text>jpeg_set_linear_quality</text> </link>
              </td>
              <td>
                <text>Same as </text> <link file="../jpeg_compress_struct.jpeg_set_quality.xml"><text>jpeg_set_quality</text> </link><text>() except that the generated tables are the sample tables given in the JPEG spec section K.1, multiplied by the specified scale factor.</text> </td>
            </tr>
            <tr>
              <td>
                <link file="../jpeg_compress_struct.jpeg_quality_scaling.xml">
                  <text>jpeg_quality_scaling</text> </link>
              </td>
              <td>
                <text>Converts a value on the IJG-recommended quality scale to a linear scaling percentage.</text> </td>
            </tr>
            <tr>
              <td>
                <link file="../jpeg_compress_struct.jpeg_add_quant_table.xml">
                  <text>jpeg_add_quant_table</text> </link>
              </td>
              <td>
                <p>
                  <text>Allows an arbitrary quantization table to be created.</text> </p>
              </td>
            </tr>
            <tr>
              <td>
                <link file="../jpeg_compress_struct.jpeg_simple_progression.xml">
                  <text>jpeg_simple_progression</text> </link>
              </td>
              <td>
                <text>Generates a default scan script for writing a progressive-JPEG file.</text> </td>
            </tr>
          </tbody>
        </table>
      </p>
      <p>
        <text>Compression parameters (</text> <b><text>properties</text> </b><text>) include:</text> <br /><br /><table><tbody><tr><td><link file="../jpeg_compress_struct.Dct_method.xml"><text>Dct_method</text> </link></td><td><text>Selects the algorithm used for the DCT step.</text> </td></tr><tr><td><link file="../jpeg_compress_struct.Jpeg_color_space.xml"><text>Jpeg_color_spaсe</text> </link></td><td><text>The JPEG color space.</text> </td></tr><tr><td><link file="../jpeg_compress_struct.Num_components.xml"><text>Num_components</text> </link></td><td><text>Number of color components for JPEG color space.</text> </td></tr><tr><td><link file="../jpeg_compress_struct.Optimize_coding.xml"><text>Optimize_coding</text> </link></td><td><text>Way of using Huffman coding tables.</text> </td></tr></tbody></table></p>
      <p>
        <text>unsigned int restart_interval</text> <br /><text>int restart_in_rows</text> <br /><text>To emit restart markers in the JPEG file, set one of these nonzero.</text> <br /><text>Set restart_interval to specify the exact interval in MCU blocks.</text> <br /><text>Set restart_in_rows to specify the interval in MCU rows. (If</text> <br /><text>restart_in_rows is not 0, then restart_interval is set after the</text> <br /><text>image width in MCUs is computed.) Defaults are zero (no restarts).</text> <br /><text>One restart marker per MCU row is often a good choice.</text> <br /><text>NOTE: the overhead of restart markers is higher in grayscale JPEG</text> <br /><text>files than in color files, and MUCH higher in progressive JPEGs.</text> <br /><text>If you use restarts, you may want to use larger intervals in those</text> <br /><text>cases.</text> <br /><br /><text>const jpeg_scan_info * scan_info</text> <br /><text>int num_scans</text> <br /><text>By default, scan_info is NULL; this causes the compressor to write a</text> <br /><text>single-scan sequential JPEG file. If not NULL, scan_info points to</text> <br /><text>an array of scan definition records of length num_scans. The</text> <br /><text>compressor will then write a JPEG file having one scan for each scan</text> <br /><text>definition record. This is used to generate noninterleaved or</text> <br /><text>progressive JPEG files. The library checks that the scan array</text> <br /><text>defines a valid JPEG scan sequence. (jpeg_simple_progression creates</text> <br /><text>a suitable scan definition array for progressive JPEG.) This is</text> <br /><text>discussed further under "Progressive JPEG support".</text> <br /><br /><text>int smoothing_factor</text> <br /><text>If non-zero, the input image is smoothed; the value should be 1 for</text> <br /><text>minimal smoothing to 100 for maximum smoothing. Consult jcsample.c</text> <br /><text>for details of the smoothing algorithm. The default is zero.</text> <br /><br /><text>boolean write_JFIF_header</text> <br /><text>If TRUE, a JFIF APP0 marker is emitted. jpeg_set_defaults() and</text> <br /><text>jpeg_set_colorspace() set this TRUE if a JFIF-legal JPEG color space</text> <br /><text>(ie, YCbCr or grayscale) is selected, otherwise FALSE.</text> <br /><br /><text>UINT8 JFIF_major_version</text> <br /><text>UINT8 JFIF_minor_version</text> <br /><text>The version number to be written into the JFIF marker.</text> <br /><text>jpeg_set_defaults() initializes the version to 1.01 (major=minor=1).</text> <br /><text>You should set it to 1.02 (major=1, minor=2) if you plan to write</text> <br /><text>any JFIF 1.02 extension markers.</text> <br /><br /><text>UINT8 density_unit</text> <br /><text>UINT16 X_density</text> <br /><text>UINT16 Y_density</text> <br /><text>The resolution information to be written into the JFIF marker;</text> <br /><text>not used otherwise. density_unit may be 0 for unknown,</text> <br /><text>1 for dots/inch, or 2 for dots/cm. The default values are 0,1,1</text> <br /><text>indicating square pixels of unknown size.</text> <br /><br /><text>boolean write_Adobe_marker</text> <br /><text>If TRUE, an Adobe APP14 marker is emitted. jpeg_set_defaults() and</text> <br /><text>jpeg_set_colorspace() set this TRUE if JPEG color space RGB, CMYK,</text> <br /><text>or YCCK is selected, otherwise FALSE. It is generally a bad idea</text> <br /><text>to set both write_JFIF_header and write_Adobe_marker. In fact,</text> <br /><text>you probably shouldn't change the default settings at all --- the</text> <br /><text>default behavior ensures that the JPEG file's color space can be</text> <br /><text>recognized by the decoder.</text> <br /><br /><text>JQUANT_TBL * quant_tbl_ptrs[NUM_QUANT_TBLS]</text> <br /><text>Pointers to coefficient quantization tables, one per table slot,</text> <br /><text>or NULL if no table is defined for a slot. Usually these should</text> <br /><text>be set via one of the above helper routines; jpeg_add_quant_table()</text> <br /><text>is general enough to define any quantization table. The other</text> <br /><text>routines will set up table slot 0 for luminance quality and table</text> <br /><text>slot 1 for chrominance.</text> <br /><br /><text>JHUFF_TBL * dc_huff_tbl_ptrs[NUM_HUFF_TBLS]</text> <br /><text>JHUFF_TBL * ac_huff_tbl_ptrs[NUM_HUFF_TBLS]</text> <br /><text>Pointers to Huffman coding tables, one per table slot, or NULL if</text> <br /><text>no table is defined for a slot. Slots 0 and 1 are filled with the</text> <br /><text>JPEG sample tables by jpeg_set_defaults(). If you need to allocate</text> <br /><text>more table structures, jpeg_alloc_huff_table() may be used.</text> <br /><text>Note that optimal Huffman tables can be computed for an image</text> <br /><text>by setting optimize_coding, as discussed above; there's seldom</text> <br /><text>any need to mess with providing your own Huffman tables.</text> <br /><br /><text>There are some additional cinfo fields which are not documented here</text> <br /><text>because you currently can't change them; for example, you can't set</text> <br /><text>arith_code TRUE because arithmetic coding is unsupported.</text> <br /><br /><br /><text>Per-component parameters are stored in the struct cinfo.comp_info[i] for</text> <br /><text>component number i. Note that components here refer to components of the</text> <br /><text>JPEG color space, *not* the source image color space. A suitably large</text> <br /><text>comp_info[] array is allocated by jpeg_set_defaults(); if you choose not</text> <br /><text>to use that routine, it's up to you to allocate the array.</text> <br /><br /><text>int component_id</text> <br /><text>The one-byte identifier code to be recorded in the JPEG file for</text> <br /><text>this component. For the standard color spaces, we recommend you</text> <br /><text>leave the default values alone.</text> <br /><br /><text>int h_samp_factor</text> <br /><text>int v_samp_factor</text> <br /><text>Horizontal and vertical sampling factors for the component; must</text> <br /><text>be 1..4 according to the JPEG standard. Note that larger sampling</text> <br /><text>factors indicate a higher-resolution component; many people find</text> <br /><text>this behavior quite unintuitive. The default values are 2,2 for</text> <br /><text>luminance components and 1,1 for chrominance components, except</text> <br /><text>for grayscale where 1,1 is used.</text> <br /><br /><text>int quant_tbl_no</text> <br /><text>Quantization table number for component. The default value is</text> <br /><text>0 for luminance components and 1 for chrominance components.</text> <br /><br /><text>int dc_tbl_no</text> <br /><text>int ac_tbl_no</text> <br /><text>DC and AC entropy coding table numbers. The default values are</text> <br /><text>0 for luminance components and 1 for chrominance components.</text> <br /><br /><text>int component_index</text> <br /><text>Must equal the component's index in comp_info[]. (Beginning in</text> <br /><text>release v6, the compressor library will fill this in automatically;</text> <br /><text>you don't have to.)</text> <br /></p>
    </descriptionarticle>
  </file>
</xml>